{"version":3,"sources":["components/MyPosts/MyPosts.module.css","components/MyPosts/Post/Post.module.css","components/Profileinfo/ProfileInfo.module.css","components/MyPosts/Post/Post.jsx","components/MyPosts/MyPosts.jsx","components/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profileinfo/Profileinfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","likes","MyPosts","React","memo","postElement","posts","map","p","postsBlock","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","name","component","Textarea","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","postData","dispatch","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Profileinfo","profile","discriptionBlock","photos","large","fullName","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b1634114.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1LvXQ\",\"postsBlock\":\"MyPosts_postsBlock__228NW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2stAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__1XX1X\"};","import React from 'react';\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img src=\"https://cdn2.vectorstock.com/i/1000x1000/06/76/brown-hair-businesswoman-avatar-woman-face-profile-vector-21960676.jpg\" alt='' />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>{props.likes}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validation/validator\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n\tlet postElement =\r\n\t\tprops.posts.map(p => <Post message={p.message} likes={p.likes} />)\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<AddNewPostForm onSubmit={onAddPost}/>\r\n\t\t\t<div className={classes.item}>\r\n\t\t\t\t{postElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field name='newPostText'\r\n\t\t\t\t\t   component={Textarea}\r\n\t\t\t\t\t   validate={[required, maxLength10]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button>Add post</button>\r\n\t\t\t<button>Remove</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n\r\n\r\n// \treturn (\r\n// \t\t<StoreContext.Consumer>\r\n// \t\t\t{\r\n// \t\t\t\t(store) => {\r\n// \t\t\t\t\tlet state = store.getState()\r\n// \t\t\t\t\tlet addPost = () => {\r\n// \t\t\t\t\t\tstore.dispatch(addPostActionCreator());\r\n// \t\t\t\t\t}\r\n\r\n\r\n// \t\t\t\t\tlet onPostChange = (text) => {\r\n// \t\t\t\t\t\tlet action = updateNewPostTextActionCreator(text);\r\n// \t\t\t\t\t\tstore.dispatch(action);\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\treturn <MyPosts updateNewPostText={onPostChange} addPost={addPost}\r\n// \t\t\t\t\t\tposts={store.getState().profilePage.postData} newPostText={store.getState().profilePage.newPostText} />\r\n// \t\t\t\t}\r\n// \t\t\t}\r\n// \t\t</StoreContext.Consumer>\r\n// \t)\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.postData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: !this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode =  () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deActivateEditMode}\r\n                           value={ status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ProfileStatus from '../Profile/ProfileStatus'\r\nimport ProfileStatusWithHooks from \"../Profile/ProfileStatusWithHooks\";\r\n\r\n\r\nconst Profileinfo = ({profile, status,updateStatus}) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<div className={classes.discriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large}/>\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n\t\t\t\t<h3>{profile.fullName}</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport MyPosts from '../MyPosts/MyPosts';\r\nimport MyPostsContainer from '../MyPosts/MyPostsContainer';\r\nimport Post from '../MyPosts/Post/Post';\r\nimport Profileinfo from '../Profileinfo/Profileinfo';\r\nimport classes from \"./Profile.module.css\"\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Profileinfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n\tconnect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n\twithRouter\r\n) (ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}